{"id":"node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","dependencies":[{"name":"C:\\Users\\KarinHuber\\source\\repos\\coderdojo-samples\\music\\node_modules\\standardized-audio-context\\build\\es2019\\factories\\get-audio-node-renderer.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\KarinHuber\\source\\repos\\coderdojo-samples\\music\\node_modules\\standardized-audio-context\\src\\factories\\get-audio-node-renderer.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\KarinHuber\\source\\repos\\coderdojo-samples\\music\\package.json","includedInParent":true,"mtime":1632035635932},{"name":"C:\\Users\\KarinHuber\\source\\repos\\coderdojo-samples\\music\\node_modules\\standardized-audio-context\\package.json","includedInParent":true,"mtime":1632032915540}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGetAudioNodeRenderer = void 0;\n\nconst createGetAudioNodeRenderer = getAudioNodeConnections => {\n  return audioNode => {\n    const audioNodeConnections = getAudioNodeConnections(audioNode);\n\n    if (audioNodeConnections.renderer === null) {\n      throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n    }\n\n    return audioNodeConnections.renderer;\n  };\n};\n\nexports.createGetAudioNodeRenderer = createGetAudioNodeRenderer;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":8,"column":0}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":8,"column":6}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":39},"generated":{"line":8,"column":32}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":73},"generated":{"line":8,"column":35}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":72},"generated":{"line":8,"column":58}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":100},"generated":{"line":8,"column":62}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":5,"column":4},"generated":{"line":9,"column":0}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":6,"column":8},"generated":{"line":9,"column":9}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":5,"column":11},"generated":{"line":9,"column":18}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":7,"column":46},"generated":{"line":9,"column":22}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":8,"column":8},"generated":{"line":10,"column":0}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":8,"column":14},"generated":{"line":10,"column":10}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":8,"column":34},"generated":{"line":10,"column":30}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":8,"column":37},"generated":{"line":10,"column":33}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":8,"column":60},"generated":{"line":10,"column":56}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":8,"column":61},"generated":{"line":10,"column":57}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":8,"column":60},"generated":{"line":10,"column":66}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":8,"column":8},"generated":{"line":10,"column":67}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":12,"column":0}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":12,"column":8}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":10,"column":32},"generated":{"line":12,"column":28}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":10,"column":33},"generated":{"line":12,"column":29}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":10,"column":12},"generated":{"line":12,"column":37}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":10,"column":46},"generated":{"line":12,"column":42}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":12,"column":46}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":10,"column":52},"generated":{"line":12,"column":48}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":13,"column":0}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":11,"column":18},"generated":{"line":13,"column":12}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":11,"column":22},"generated":{"line":13,"column":16}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":11,"column":18},"generated":{"line":13,"column":21}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":11,"column":28},"generated":{"line":13,"column":22}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":11,"column":18},"generated":{"line":13,"column":87}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":13,"column":88}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":14,"column":0}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":14,"column":8},"generated":{"line":16,"column":0}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":14,"column":53},"generated":{"line":16,"column":11}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":14,"column":73},"generated":{"line":16,"column":31}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":14,"column":74},"generated":{"line":16,"column":32}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":14,"column":8},"generated":{"line":16,"column":40}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":15,"column":5},"generated":{"line":17,"column":0}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":5,"column":4},"generated":{"line":17,"column":3}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":16,"column":1},"generated":{"line":18,"column":0}},{"source":"../../../src/factories/get-audio-node-renderer.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":18,"column":1}}],"sources":{"../../../src/factories/get-audio-node-renderer.ts":"import { IAudioNode, IAudioNodeRenderer, IMinimalOfflineAudioContext, IOfflineAudioContext } from '../interfaces';\nimport { TGetAudioNodeRendererFactory } from '../types';\n\nexport const createGetAudioNodeRenderer: TGetAudioNodeRendererFactory = (getAudioNodeConnections) => {\n    return <T extends IMinimalOfflineAudioContext | IOfflineAudioContext>(\n        audioNode: IAudioNode<T>\n    ): IAudioNodeRenderer<T, IAudioNode<T>> => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n\n        return <IAudioNodeRenderer<T, IAudioNode<T>>>audioNodeConnections.renderer;\n    };\n};\n"},"lineCount":null}},"error":null,"hash":"c0c5cf199ae0e6d24cd1aca8d2c8b421","cacheData":{"env":{}}}